@using Open.Blazor.Core.Features.Chat
@inherits LayoutComponentBase
@inject IMessageService MessageService
@inject IDialogService DialogService

<FluentToastProvider Position="ToastPosition.TopCenter" Timeout="10_000"/>
<FluentDialogProvider/>
<FluentTooltipProvider/>
<FluentDesignTheme OnLoaded="@OnLoaded" StorageName="theme" CustomColor="#FFFFFF"/>
<CascadingValue Value="@_themeMode">
    <FluentLayout>
        <FluentStack Orientation="Orientation.Horizontal" HorizontalAlignment="HorizontalAlignment.Start" Style="margin-left: 10px"
                     VerticalAlignment="VerticalAlignment.Center" Horizontal Gap="5">
            <FluentRadioGroup  @bind-Value="_hostMode" Label="Ollama Host Mode:" >
                <FluentRadio Value="OllamaHostMode.Aspire">Aspire</FluentRadio>
                <FluentRadio Value="OllamaHostMode.Local">Local</FluentRadio>
            </FluentRadioGroup>
            <FluentSpacer/>

            <FluentButton OnClick="OpenSettingsAsync" Title="Settings" Appearance="Appearance.Stealth" Style="margin-top:10px;margin-right:20px">
                <FluentIcon Value="@(new Icons.Filled.Size20.Settings())" Color="Color.Neutral"/>
            </FluentButton>
        </FluentStack>
        <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">
            @* <NavMenu /> *@
            <FluentBodyContent Class="body-content">
                <ErrorBoundary>
                    <ChildContent>
                        <div class="content">
                            <FluentMessageBarProvider Section="@AppSection.MESSAGES_TOP"/>
                            <CascadingValue Value="_hostMode">
                                @Body
                            </CascadingValue>
                           
                        </div>
                    </ChildContent>
                    <ErrorContent Context="ex">
                        <div class="blazor-error-boundary">@ex.Message</div>
                    </ErrorContent>
                </ErrorBoundary>
            </FluentBodyContent>
        </FluentStack>
    </FluentLayout>
</CascadingValue>

@code
{
    private IDialogReference? _dialog;
    private DesignThemeModes _themeMode { get; set; }
    OllamaHostMode _hostMode;

    private void OnLoaded(LoadedEventArgs e)
    {
        _themeMode = e.IsDark ? DesignThemeModes.Dark : DesignThemeModes.Light;
    }

    private async Task OpenSettingsAsync()
    {
        _dialog = await DialogService.ShowPanelAsync<SettingsPanel>(new DialogParameters
        {
            Alignment = HorizontalAlignment.Right,
            Title = "Settings",
            PreventScroll = true
        });
        var result = await _dialog.Result;
    }
}