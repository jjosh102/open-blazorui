@inherits LayoutComponentBase
@inject IMessageService MessageService
@inject IDialogService DialogService

<FluentToastProvider Position="ToastPosition.TopCenter" />
<FluentDialogProvider />
<FluentTooltipProvider />
<FluentDesignTheme OnLoaded="@OnLoaded" StorageName="theme" />
<CascadingValue Value="@_themeMode">
    <FluentLayout>
        <FluentHeader Style="background-color: var(--neutral-layer-4) !important;">
            <FluentStack Orientation="Orientation.Horizontal" HorizontalAlignment="HorizontalAlignment.Start"
                         VerticalAlignment="VerticalAlignment.Center" Horizontal Gap="5">
                <FluentLabel Typo="Typography.Subject" Weight="FontWeight.Bold">  open-blazorui </FluentLabel>
                <FluentSpacer />
                <FluentButton OnClick="OpenSettingsAsync" Title="Settings" Appearance="Appearance.Stealth">
                    <FluentIcon Value="@(new Icons.Filled.Size20.Settings())" OnClick="OpenSettingsAsync" Color="Color.Neutral" />
                </FluentButton>
            </FluentStack>
        </FluentHeader>
        <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">
            <NavMenu />
            <FluentBodyContent Class="body-content">
                <ErrorBoundary>
                    <ChildContent>
                        <div class="content">
                            @Body
                        </div>
                    </ChildContent>
                    <ErrorContent Context="ex">
                        <div class="blazor-error-boundary">@ex.Message</div>
                    </ErrorContent>
                </ErrorBoundary>
            </FluentBodyContent>
        </FluentStack>
    </FluentLayout>
</CascadingValue>
@code
{
    private IDialogReference? _dialog;
    private DesignThemeModes _themeMode { get; set; }
    private void OnLoaded(LoadedEventArgs e) =>
        _themeMode = e.IsDark? DesignThemeModes.Dark : DesignThemeModes.Light;

    private async Task OpenSettingsAsync()
    {
        _dialog = await DialogService.ShowPanelAsync<SettingsPanel>(new DialogParameters()
            {
                Alignment = HorizontalAlignment.Right,
                Title = "Settings",
                PreventScroll = true
            });
        DialogResult result = await _dialog.Result;

    }
}
