@page "/chat"

<div class="flex flex-col h-screen">

    @if (_hostMode == HostMode.Ollama && _activeOllamaModels is not null)
    {
        <div
            class="@($"fixed inset-0 z-50 overflow-hidden transition-opacity duration-300 {(_isPanelOpen ? "opacity-100" : "opacity-0 pointer-events-none")}")">
            <div class="fixed inset-0 bg-black/50" @onclick="TogglePanel"></div>
            <div
                class="fixed top-0 right-0 h-full w-96 transform transition-transform duration-300 ease-in-out @(_isPanelOpen ? "translate-x-0" : "translate-x-full")">
                <div class="h-full p-6 bg-gray-800 text-white shadow-xl">
                    <div class="flex justify-between items-center mb-4">
                        <div class="text-xl font-bold">Chat Settings</div>
                        <button @onclick="TogglePanel" class="text-gray-400 hover:text-white">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                                 stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                      d="M6 18L18 6M6 6l12 12"/>
                            </svg>
                        </button>
                    </div>

                    <hr class="my-4 border-gray-600"/>


                    <div class="space-y-4">
                        <div>
                            <label for="listOfActiveModels"
                                   class="block text-sm font-medium text-gray-300">Model</label>
                            <select id="listOfActiveModels"
                                    class="block w-full p-2 bg-gray-700 border border-gray-600 rounded-md text-white"
                                    @onchange="HandleSelectedOptionChanged">
                                @foreach (var model in _activeOllamaModels.Models)
                                {
                                    <option value="@model.Name">@model.Name</option>
                                }
                            </select>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-300">Temperature: @_temperature</label>
                            <input type="range" min="0" max="2" step="0.1"
                                   class="w-full h-2 bg-gray-600 rounded-lg cursor-pointer accent-blue-500"
                                   @bind="_temperature"/>
                            <p class="text-xs text-gray-400 mt-1">Controls response creativity</p>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-300">System Prompt</label>
                            <textarea rows="4"
                                      class="block w-full p-2 bg-gray-700 border border-gray-600 rounded-md text-white"
                                      @bind="_chatSystemPrompt"></textarea>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div id="chat-window" class="flex-1 overflow-y-auto px-4 pb-32 mb-4">
        @foreach (var message in _discourse.ChatMessages)
        {
            <ChatContent Message="message" JsRuntime="_jsRuntime" Host="_hostMode"/>
        }
    </div>

    <div class="fixed bottom-0 left-0 right-0 bg-[#0D1117] backdrop-blur-sm">
        <div class="max-w-4xl mx-auto p-4">
            <div class="relative bg-gray-800 rounded-xl border border-gray-700">
                <div class="w-full">
                    <textarea id="chat-input"
                              class="w-full p-4 bg-transparent text-white resize-none focus:outline-none min-h-[52px] max-h-[200px]"
                              placeholder="Message..."
                              rows="1"
                              @bind="_userMessage"
                              @bind:event="oninput"
                              @ref="_textAreaReference">
                    </textarea>
                </div>
                
                <div class="border-t border-gray-700 p-2 flex items-center">
                    <div class="flex gap-2">
                        @if (_hostMode == HostMode.Ollama)
                        {
                            <button class="p-2 hover:bg-gray-700 rounded-lg transition-colors" @onclick="TogglePanel">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none"
                                     viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                          d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                          d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                                </svg>
                            </button>
                        }
                        <button class="p-2 hover:bg-gray-700 rounded-lg transition-colors"
                                @onclick="@(_isListening ? StopListening : StartListening)">
                            <svg xmlns="http://www.w3.org/2000/svg"
                                 class="h-5 w-5 @(!_isListening ? "text-gray-400" : "text-red-500")"
                                 fill="none"
                                 viewBox="0 0 24 24"
                                 stroke="currentColor">
                                <path stroke-linecap="round"
                                      stroke-linejoin="round"
                                      stroke-width="2"
                                      d="M12 18.5a6.5 6.5 0 0 0 6.5-6.5v-6a6.5 6.5 0 1 0-13 0v6a6.5 6.5 0 0 0 6.5 6.5Z M8 18.5v1a4 4 0 0 0 8 0v-1 M12 3.5v2 M8 6.5s1.5 2 4 2 4-2 4-2"/>
                            </svg>
                        </button>
                    </div>

                   
                    <div class="ml-auto">
                        <button class="p-2 hover:bg-gray-700 rounded-lg transition-colors"
                                @onclick="@(_isChatOngoing ? StopChat : SendMessage)">
                            @if (!_isChatOngoing)
                            {
                                <svg xmlns="http://www.w3.org/2000/svg"
                                     class="h-5 w-5 text-blue-500 transform rotate-90"
                                     fill="none"
                                     viewBox="0 0 24 24"
                                     stroke="currentColor">
                                    <path stroke-linecap="round"
                                          stroke-linejoin="round"
                                          stroke-width="2"
                                          d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"/>
                                </svg>
                            }
                            else
                            {
                                <svg xmlns="http://www.w3.org/2000/svg"
                                     class="h-5 w-5 text-red-500"
                                     fill="none"
                                     viewBox="0 0 24 24"
                                     stroke="currentColor">
                                    <path stroke-linecap="round"
                                          stroke-linejoin="round"
                                          stroke-width="2"
                                          d="M6 6h12v12H6z"/>
                                </svg>
                            }
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
